package stats

import "github.com/MaT1g3R/stats-tracker/components/card"

templ PlayerOverview(
	timeStats TimeStats,
	winStats WinStats,
	gameStats GameStats,
	survivalStats SurvivalStats,
	scalingStats ScalingStats,
) {
	<div class="container mx-auto p-6">
		<div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
			<!-- Game Performance -->
			@card.Card() {
				@card.Header() {
					@card.Title() {
						Game Performance
					}
				}
				@card.Content() {
					<div class="space-y-3">
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Wins</span>
							<span class="text-sm text-green-600">{ winStats.Wins }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Losses</span>
							<span class="text-sm text-red-600">{ winStats.Losses }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Win Rate</span>
							<span class="text-sm font-semibold">{ winStats.WinRate }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Best Win Streak</span>
							<span class="text-sm">{ winStats.BestWinStreak }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Highest Score</span>
							<span class="text-sm">{ gameStats.HighestScore }</span>
						</div>
					</div>
				}
			}
			<!-- Time Stats -->
			@card.Card() {
				@card.Header() {
					@card.Title() {
						Time Statistics
					}
				}
				@card.Content() {
					<div class="space-y-3">
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Total Play Time</span>
							<span class="text-sm">{ timeStats.TotalPlayTime }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Fastest Win</span>
							<span class="text-sm">{ timeStats.FastestWin }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Average Win Time</span>
							<span class="text-sm">{ timeStats.AverageWinTime }</span>
						</div>
					</div>
				}
			}
			<!-- Survival Rates -->
			@card.Card() {
				@card.Header() {
					@card.Title() {
						Survival Rates
					}
				}
				@card.Content() {
					<div class="space-y-3">
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Act 1</span>
							<span class="text-sm">{ survivalStats.Act1Rate }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Act 2</span>
							<span class="text-sm">{ survivalStats.Act2Rate }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Act 3</span>
							<span class="text-sm">{ survivalStats.Act3Rate }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Act 4</span>
							<span class="text-sm">{ survivalStats.Act4Rate }</span>
						</div>
						<div class="flex justify-between items-center">
							<div class="flex items-center">
								<span class="text-sm font-medium">Against</span>
								<img src="/assets/img/nob-2.png" alt="Gremlin Nob"/>
							</div>
							<span class="text-sm">{ survivalStats.NobRate }</span>
						</div>
					</div>
				}
			}
			<!-- Combat Stats -->
			@card.Card() {
				@card.Header() {
					@card.Title() {
						Combat Statistics
					}
				}
				@card.Content() {
					<div class="space-y-3">
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Total Floors Climbed</span>
							<span class="text-sm">{ gameStats.TotalFloors }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Bosses Killed</span>
							<span class="text-sm">{ gameStats.BossesKilled }</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm font-medium">Enemies Killed</span>
							<span class="text-sm">{ gameStats.EnemiesKilled }</span>
						</div>
					</div>
				}
			}
			<!-- Meta Scaling Stats -->
			@card.Card() {
				@card.Header() {
					@card.Title() {
						Meta Scaling
					}
				}
				@card.Content() {
					<div class="space-y-3">
						if scalingStats.MaxRelics != "0" {
							<div class="flex justify-between items-center">
								<span class="text-sm font-medium">Max Relics</span>
								<span class="text-sm">{ scalingStats.MaxRelics }</span>
							</div>
						}
						if scalingStats.MaxGold != "0" {
							<div class="flex justify-between items-center">
								<span class="text-sm font-medium">Max Gold</span>
								<span class="text-sm">{ scalingStats.MaxGold }</span>
							</div>
						}
						if scalingStats.MaxRemoves != "0" {
							<div class="flex justify-between items-center">
								<span class="text-sm font-medium">Max Removes</span>
								<span class="text-sm">{ scalingStats.MaxRemoves }</span>
							</div>
						}
						if scalingStats.MaxRitualDagger != "0" {
							<div class="flex justify-between items-center">
								<span class="text-sm font-medium">Max Ritual Dagger</span>
								<span class="text-sm">{ scalingStats.MaxRitualDagger }</span>
							</div>
						}
						if scalingStats.MaxHP != "0" {
							<div class="flex justify-between items-center">
								<span class="text-sm font-medium">Max HP</span>
								<span class="text-sm">{ scalingStats.MaxHP }</span>
							</div>
						}
						if scalingStats.MaxSearingBlow != "0" {
							<div class="flex justify-between items-center">
								<span class="text-sm font-medium">Max Searing Blow</span>
								<span class="text-sm">{ scalingStats.MaxSearingBlow }</span>
							</div>
						}
						if scalingStats.MaxPotions != "0" {
							<div class="flex justify-between items-center">
								<span class="text-sm font-medium">Max Potions Created</span>
								<span class="text-sm">{ scalingStats.MaxPotions }</span>
							</div>
						}
						if scalingStats.MaxAlgorithm != "0" {
							<div class="flex justify-between items-center">
								<span class="text-sm font-medium">Max Genetic Algorithm</span>
								<span class="text-sm">{ scalingStats.MaxAlgorithm }</span>
							</div>
						}
						if scalingStats.MaxLessons != "0" {
							<div class="flex justify-between items-center">
								<span class="text-sm font-medium">Max Lessons Learned</span>
								<span class="text-sm">{ scalingStats.MaxLessons }</span>
							</div>
						}
					</div>
				}
			}
		</div>
	</div>
}
